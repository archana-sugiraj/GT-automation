const { test, expect,page } = require('@playwright/test');
import { globalSetup } from "../global-setup/globalSetup.js";
import { PageObject } from '../page-factory/page';
import{ ThreePointPageObject} from '../page-factory/threePointShader';
import{ FourPointPageObject} from '../page-factory/fourPointShader';
import{ CurvyProductionPageObject} from '../page-factory/curvyproduction';


var environment =globalSetup();
var pageObject;
var threePointPageObject;
var fourPointPageObject;
var curvyProductionPageObject;

test.beforeEach(async ({ page }) => {
   pageObject = new PageObject(page);
   threePointPageObject = new ThreePointPageObject(page);
   fourPointPageObject = new FourPointPageObject(page);
   curvyProductionPageObject = new CurvyProductionPageObject(page);
  });

  test('Plotting a Curvy Production Possibility with unchecking footprint and Check for its exact presence in all the modes', async ({ page }) => {
    await pageObject.launchApplication(environment.baseUrl);
    await pageObject.clickOnLoadAPIButton();
    await threePointPageObject.clickOnOptionButton('Curvy Production Possibility');
    await threePointPageObject.plotshaderOnGraph("Curvy Production Possibility");
    await page.waitForTimeout(3000);
    await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(1).fill("30");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(2).fill("30");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(2).evaluate(e => e.blur());
  var qpoints = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
  console.log(qpoints);
  await page.waitForTimeout(3000);
  await page.frameLocator(pageObject.grapfIframe).locator(threePointPageObject.solutionviewtab).click(); 
  var spoints = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
  
  expect (qpoints).toStrictEqual(spoints);
  await page.waitForTimeout(2000);
  await threePointPageObject.clickOnOptionButton('Curvy Production Possibility');
  await threePointPageObject.plotshaderOnGraph("Curvy Production Possibility");
  await page.waitForTimeout(3000);
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(1).fill("80");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(2).fill("80");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(5).fill("90");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(6).fill("90");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(6).evaluate(e => e.blur());
  await page.frameLocator(fourPointPageObject.grapfIframe).locator(curvyProductionPageObject.footPrint).click();
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Whole)).toBeVisible();
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Sol)).toBeVisible();
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Footprint)).toBeHidden();
  var apoints = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Sol);
  console.log(apoints);
  await page.frameLocator(pageObject.grapfIframe).locator(threePointPageObject.closebutton).nth(0).click();
  await page.frameLocator('iframe[name="ext_012345678_1"]').locator('text=accordion-closeGraph Description >> button').click();
  await page.frameLocator(pageObject.grapfIframe).locator(threePointPageObject.link_Generate).click();
  await page.frameLocator(pageObject.grapfIframe).locator(threePointPageObject.btn_Save).click();
  await page.locator(threePointPageObject.retrieveoutput).click();
  await page.locator(threePointPageObject.modedropdown).selectOption('preview');
  await page.locator(threePointPageObject.copytoinput).click();
  await pageObject.clickOnLoadAPIButton();
  await page.waitForTimeout(3000);
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Whole)).toBeVisible();
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Sol)).toBeVisible();
  var s1points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
  var a1points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Sol);
  expect (s1points).toStrictEqual(spoints);
  expect (a1points).toStrictEqual(apoints);
  console.log("a1");
  console.log(a1points);
  console.log(s1points);
  console.log(spoints);
  await page.locator(threePointPageObject.modedropdown).selectOption('test');
  await pageObject.clickOnLoadAPIButton();
  await page.waitForTimeout(2000);
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Whole)).toBeVisible();
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Ans)).toBeVisible();
  var s2points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
  var q2points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Ans);
  console.log(s2points);
  console.log(q2points);
  await(page.frameLocator(threePointPageObject. whole_Iframe).locator(curvyProductionPageObject.curvetext_btn)).click();
  await page.waitForTimeout(3000);
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(5).fill("90");
    await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(6).fill("90");
    await page.frameLocator(threePointPageObject. whole_Iframe).locator(threePointPageObject.btn_done).click();
    var a2points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Ans);
    console.log(a2points);
    expect (a2points).toStrictEqual(apoints);
    await page.locator(threePointPageObject.retrieveoutput).click();
    expect (page.locator(threePointPageObject.score_area)).toHaveValue('100');
    await page.locator(threePointPageObject.copytoinput).click();
    await page.locator(threePointPageObject.modedropdown).selectOption('sample');
    await pageObject.clickOnLoadAPIButton();
    await page.waitForTimeout(3000);
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Whole)).toBeVisible();
    var ppoints = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Ans)).toBeVisible();
    var a3points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Ans);
    expect (ppoints).toStrictEqual(spoints);
    expect (a3points).toStrictEqual(a2points);
    await page.waitForTimeout(2000);
    await page.locator(threePointPageObject.modedropdown).selectOption('review');
    await pageObject.clickOnLoadAPIButton();
    await page.waitForTimeout(3000);
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Whole)).toBeVisible();
    var p1points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Ans)).toBeVisible();
    var a4points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Ans);
    expect (p1points).toStrictEqual(spoints);
    expect (a4points).toStrictEqual(a2points);
    
  });

  test('Plotting a Curvy Production Possibility with checking footprint and Check for its exact presence in all the modes', async ({ page }) => {
    await pageObject.launchApplication(environment.baseUrl);
    await pageObject.clickOnLoadAPIButton();
    await threePointPageObject.clickOnOptionButton('Curvy Production Possibility');
    await threePointPageObject.plotshaderOnGraph("Curvy Production Possibility");
    await page.waitForTimeout(3000);
    await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(1).fill("30");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(2).fill("30");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(2).evaluate(e => e.blur());
  var qpoints = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
  
  await page.waitForTimeout(3000);
  await page.frameLocator(pageObject.grapfIframe).locator(threePointPageObject.solutionviewtab).click(); 
  var spoints = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
  
  expect (qpoints).toStrictEqual(spoints);
  await page.waitForTimeout(2000);
  await threePointPageObject.clickOnOptionButton('Curvy Production Possibility');
  await threePointPageObject.plotshaderOnGraph("Curvy Production Possibility");
  await page.waitForTimeout(3000);
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(1).fill("80");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(2).fill("80");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(5).fill("90");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(6).fill("90");
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(6).evaluate(e => e.blur());
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Whole)).toBeVisible();
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Sol)).toBeVisible();
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Footprint)).toBeVisible();
  var fpoints = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Footprint);
  var apoints = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Sol);
  await page.frameLocator(pageObject.grapfIframe).locator(threePointPageObject.closebutton).nth(0).click();
  await page.frameLocator('iframe[name="ext_012345678_1"]').locator('text=accordion-closeGraph Description >> button').click();
  await page.frameLocator(pageObject.grapfIframe).locator(threePointPageObject.link_Generate).click();
  await page.frameLocator(pageObject.grapfIframe).locator(threePointPageObject.btn_Save).click();
  await page.locator(threePointPageObject.retrieveoutput).click();
  await page.locator(threePointPageObject.modedropdown).selectOption('preview');
  await page.locator(threePointPageObject.copytoinput).click();
  await pageObject.clickOnLoadAPIButton();
  await page.waitForTimeout(3000);
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Whole)).toBeVisible();
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Sol)).toBeVisible();
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Footprint)).toBeVisible();
  var s1points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
  var a1points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Sol);
  var f1points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Footprint);
  expect (s1points).toStrictEqual(spoints);
  expect (a1points).toStrictEqual(apoints);
  expect (f1points).toStrictEqual(fpoints);
  await page.locator(threePointPageObject.modedropdown).selectOption('test');
  await pageObject.clickOnLoadAPIButton();
  await page.waitForTimeout(2000);
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Whole)).toBeVisible();
  await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Ans)).toBeVisible();
  var s2points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
  var q2points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Ans);
  await(page.frameLocator(threePointPageObject. whole_Iframe).locator(curvyProductionPageObject.curvetext_btn)).click();
  await page.waitForTimeout(3000);
  await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(5).fill("90");
    await page.frameLocator(pageObject.grapfIframe).locator('.form-control').nth(6).fill("90");
    await page.frameLocator(threePointPageObject. whole_Iframe).locator(threePointPageObject.btn_done).click();
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Footprint)).toBeVisible();
    var f2points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Footprint);
    expect (f2points).toStrictEqual(fpoints);
    await page.locator(threePointPageObject.retrieveoutput).click();
    expect (page.locator(threePointPageObject.score_area)).toHaveValue('100');
    await page.locator(threePointPageObject.copytoinput).click();
    await page.locator(threePointPageObject.modedropdown).selectOption('sample');
    await pageObject.clickOnLoadAPIButton();
    await page.waitForTimeout(3000);
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Whole)).toBeVisible();
    var ppoints = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Ans)).toBeVisible();
    var a3points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Ans);
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Footprint)).toBeVisible();
    var f3points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Footprint);
    expect (f3points).toStrictEqual(fpoints);
    expect (ppoints).toStrictEqual(spoints);
    expect (a3points).toStrictEqual(apoints);
    await page.waitForTimeout(2000);
    await page.locator(threePointPageObject.modedropdown).selectOption('review');
    await pageObject.clickOnLoadAPIButton();
    await page.waitForTimeout(3000);
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Whole)).toBeVisible();
    var p1points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Whole);
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Ans)).toBeVisible();
    var a4points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Ans);
    expect (p1points).toStrictEqual(spoints);
    expect (a4points).toStrictEqual(apoints);
    await expect(page.frameLocator(pageObject.grapfIframe).locator(curvyProductionPageObject.curve_Footprint)).toBeVisible();
    var f4points = await threePointPageObject.getPolygonAttributeByLocator("d",curvyProductionPageObject.curve_Footprint);
    expect (f4points).toStrictEqual(fpoints);
     });